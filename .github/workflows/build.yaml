name: Docker Build and Release
on: [ push ]
env:
#### An dieser Stelle müssen eure persönlichen Umgebungsvariablen eingetragen werden
  # Tip: Die Token/der API-Key werden als Secrets in den Repository-Settings eingetragen und hier referenziert.
  APP_NAME: "pet-clinic-cool" #<-- hier wird der Name euer Heroku-App eingetragen
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }} 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
  compile:
    name: Compile
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        cache: maven
  # Aufgabe 2
  sonar-cloud:
    name:  SonarCloud test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud setup
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Sonar Scan analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=DennisBaerXY_pet-clinic

      
  deploy:
    - name: Compile, build and push
      run: heroku container:login | mvn packages |  docker build --tag registry.heroku.com/${APP_NAME}/web -f Dockerfile . | docker push registry.heroku.com/${APP_NAME}/web

        
        #### AUFGABE 3 DOCKER BUILD UND PUSH
          # an dieser Stelle wird die Aufgabe 3 bearbeitet: heroku login, docker build, docker push
        
    - name: Release
      run: |
        #### AUFGABE 4 DEPLOYMENT AUF HEROKU
          # hier wirdgit die 4. Aufgabe bearbeitet: Release der App auf Heroku
